---
key: value
another_key: Другое значение ключа.
a_number_value: 100
scientific_notation: 1e+12

boolean: true
null_value: null
key with spaces: value

however: 'Строка заключенная в кавычки.'
'Ключ заключенный в кавычки.': "Полезно если нужно использовать ':' в вашем ключе."
single quotes: 'Содержит ''одну'' экранированную строку'
double quotes: "Содержит несколько: \", \0, \t, \u263A, \x0d\x0a == \r\n, экранированных строк."


#literal_block: |
#  Значение всего текста в этом блоке будет присвоено ключу 'literal_block',
#  с сохранением переноса строк.
#
#  Объявление продолжается до удаления отступа и выравнивания с ведущим отступом.
#
#      Любые строки с большим отступом сохраняют остатки своего отступа -
#      эта строка будет содержать дополнительно 4 пробела.

#folded_style: >
#  Весь блок этого текста будет значением 'folded_style', но в данном случае
#  все символы новой строки будут заменены пробелами.
#
#  Пустые строки будут преобразованы в перенос строки.
#
#      Строки с дополнительными отступами сохраняют их переносы строк -
#      этот текст появится через 2 строки.


a_nested_map:
  key: value
  another_key: Another Value
  another_nested_map:
    hello: hello

0.25: a float key

#? |
#  Этот ключ
#  который содержит несколько строк
#  : и это его значение


#? - Manchester United
#  - Real Madrid
#  : [2001-01-01, 2002-02-02]


a_sequence:
  - Item 1
  - Item 2
  - 0.5
  - Item 4
  - key: value
    another_key: another_value
  -
    - Это последовательность
    - внутри другой последовательности
  - - - Объявления вложенных последовательностей
      - могут быть сжаты


json_map: {"key": "value"}
json_seq: [3, 2, 1, "takeoff"]
в данном случае кавычки не обязательны: {key: [3, 2, 1, takeoff]}

anchored_content: &anchor_name Эта строка будет являться значением обоих ключей.
other_anchor: *anchor_name

base: &base
  name: Каждый будет иметь одинаковое имя


foo: &foo
  <<: *base
  age: 10

bar: &bar
  <<: *base
  age: 20


explicit_string: !!str 0.5


python_complex_number: !!python/complex 1+2j


datetime: '2001-12-15T02:59:43.1Z'
datetime_with_spaces: '2001-12-14 21:59:43.10 -5'
date: 2002-12-14


#gif_file: !!binary R0lGODlhDAAMAIQAAP//9/X17unp5WZmZgAAAOfn515eXvPz7Y6OjuDg4J+fn5OTk6enp56enmlpaWNjY6Ojo4SEhP/++f/++f/++f/++f/++f/++f/++f/++f/++f/++f/++f/++f/++f/++SH+Dk1hZGUgd2l0aCBHSU1QACwAAAAADAAMAAAFLCAgjoEwnuNAFOhpEMTRiggcz4BNJHrv/zCFcLiwMWYNG84BwwEeECcgggoBADs=

#set:
#  ? item1
#  ? item2
#  ? item3
#or: {item1, item2, item3}


set2:
  item1: null
  item2: null
  item3: null

...